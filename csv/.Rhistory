###What was the average annual expenditure with a START.DATE date between January 1, 2010 and December 31, 2016 (inclusive)?
###Only consider payments with strictly positive amounts.
dataset %>% filter(year(start.date) %between% c(2010, 2016))
###What was the average annual expenditure with a START.DATE date between January 1, 2010 and December 31, 2016 (inclusive)?
###Only consider payments with strictly positive amounts.
dataset %>% filter(between(year(start.date), 2010, 2016))
###What was the average annual expenditure with a START.DATE date between January 1, 2010 and December 31, 2016 (inclusive)?
###Only consider payments with strictly positive amounts.
dataset %>% filter(between(year(start.date), 2010, 2016), amount > 0)
###What was the average annual expenditure with a START.DATE date between January 1, 2010 and December 31, 2016 (inclusive)?
###Only consider payments with strictly positive amounts.
dataset %>% filter(between(year(start.date), 2010, 2016), amount > 0) %>%
group_by(year)
###What was the average annual expenditure with a START.DATE date between January 1, 2010 and December 31, 2016 (inclusive)?
###Only consider payments with strictly positive amounts.
dataset %>% filter(between(year(start.date), 2010, 2016), amount > 0) %>%
mutate (start.year = year(start.date)) %>%
group_by(start.year) %>%
summarise(mean(amount))
while (year < 2019) {
dataset$office = gsub(year, '', dataset$office)
year = year + 1
}
while (x < 2019) {
dataset$office = gsub(x, '', dataset$office)
year = year + 1
}
###-------Cleaning office
x = 2009
while (x < 2019) {
dataset$office = gsub(x, '', dataset$office)
year = year + 1
}
while (x < 2019) {
dataset$office = gsub(x, '', dataset$office)
x = x + 1
}
while (x < 2019) {
dataset$office = gsub(as.character(x), '', dataset$office)
x = x + 1
}
x = 2009
while (x < 2019) {
dataset$office = gsub(('FISCAL YEAR',as.character(x)), '', dataset$office)
x = x + 1
}
dataset$office = gsub('FISCAL YEAR', '', dataset$office)
View(dataset)
###Find the OFFICE with the highest total expenditures with a START.DATE in 2016. For this office,
###find the PURPOSE that accounts for the highest total expenditures. What fraction of the total expenditures
###(all records, all offices) with a START.DATE in 2016 do these expenditures amount to?
dataset %>% filter(amount > 0, year(start.date) == 2016)
###Find the OFFICE with the highest total expenditures with a START.DATE in 2016. For this office,
###find the PURPOSE that accounts for the highest total expenditures. What fraction of the total expenditures
###(all records, all offices) with a START.DATE in 2016 do these expenditures amount to?
dataset %>% filter(amount > 0, year(start.date) == 2016) %>%
group_by(office) %>%
arrange(desc(amount))
###Find the OFFICE with the highest total expenditures with a START.DATE in 2016. For this office,
###find the PURPOSE that accounts for the highest total expenditures. What fraction of the total expenditures
###(all records, all offices) with a START.DATE in 2016 do these expenditures amount to?
hte = dataset %>% filter(amount > 0, year(start.date) == 2016) %>%
group_by(office) %>%
arrange(desc(amount))
View(hte)
group_by(office) %>%
arrange(desc(amount))
group_by(office) %>%
arrange(desc(amount))
###Find the OFFICE with the highest total expenditures with a START.DATE in 2016. For this office,
###find the PURPOSE that accounts for the highest total expenditures. What fraction of the total expenditures
###(all records, all offices) with a START.DATE in 2016 do these expenditures amount to?
hte = dataset %>% filter(amount > 0, year(start.date) == 2016) %>%
select(office, amount) %>%
group_by(office) %>%
arrange(desc(amount))
View(hte)
arrange(desc(amount))
###Find the OFFICE with the highest total expenditures with a START.DATE in 2016. For this office,
###find the PURPOSE that accounts for the highest total expenditures. What fraction of the total expenditures
###(all records, all offices) with a START.DATE in 2016 do these expenditures amount to?
hte = dataset %>% filter(amount > 0, year(start.date) == 2016) %>%
select(office, amount) %>%
group_by(office) %>%
summarise(sum(amount, na.rm = TRUE)) %>%
arrange(desc(amount))
###Find the OFFICE with the highest total expenditures with a START.DATE in 2016. For this office,
###find the PURPOSE that accounts for the highest total expenditures. What fraction of the total expenditures
###(all records, all offices) with a START.DATE in 2016 do these expenditures amount to?
hte = dataset %>% filter(amount > 0, year(start.date) == 2016) %>%
select(office, amount) %>%
group_by(office) %>%
summarise(sum(amount, na.rm = TRUE)) %>%
arrange(desc(amount))
###Find the OFFICE with the highest total expenditures with a START.DATE in 2016. For this office,
###find the PURPOSE that accounts for the highest total expenditures. What fraction of the total expenditures
###(all records, all offices) with a START.DATE in 2016 do these expenditures amount to?
hte = dataset %>% filter(amount > 0, year(start.date) == 2016) %>%
select(office, amount) %>%
group_by(office) %>%
summarise(sum(amount, na.rm = TRUE))
View(hte)
###Find the OFFICE with the highest total expenditures with a START.DATE in 2016. For this office,
###find the PURPOSE that accounts for the highest total expenditures. What fraction of the total expenditures
###(all records, all offices) with a START.DATE in 2016 do these expenditures amount to?
hte = dataset %>% filter(amount > 0, year(start.date) == 2016) %>%
select(office, amount) %>%
group_by(office) %>%
summarise(total_exp = sum(amount, na.rm = TRUE))
###Find the OFFICE with the highest total expenditures with a START.DATE in 2016. For this office,
###find the PURPOSE that accounts for the highest total expenditures. What fraction of the total expenditures
###(all records, all offices) with a START.DATE in 2016 do these expenditures amount to?
hte = dataset %>% filter(amount > 0, year(start.date) == 2016) %>%
select(office, amount) %>%
group_by(office) %>%
summarise(total_exp = sum(amount, na.rm = TRUE)) %>%
arrange(desc(total_exp))
View(hte)
print(hte[1,])
View(dataset)
high_purp = dataset %>% filter(amount > 0) %>%
select(purpose, amount) %>%
group_by(purpose) %>%
summarise(purp_total = sum(amount, na.rm = TRUE)) %>%
arrange(desc(purp_total))
View(high_purp)
View(high_purp)
high_purp[1,2]
class(high_purp[1,2])
View(hte)
print(hte[1,])
gc_high_purp = dataset %>% filter(office = 'GOVERNMENT CONTRIBUTIONS', amount > 0) %>%
select(office, purpose, amount) %>%
group_by(purpose) %>%
summarise(purp_total = sum(amount, na.rm = TRUE)) %>%
arrange(desc(purp_total))
gc_high_purp = dataset %>% filter(office == 'GOVERNMENT CONTRIBUTIONS', amount > 0) %>%
select(office, purpose, amount) %>%
group_by(purpose) %>%
summarise(purp_total = sum(amount, na.rm = TRUE)) %>%
arrange(desc(purp_total))
View(gc_high_purp)
print(gc_high_purp[1,])
amount_2016 = dataset %>% filter(amount > 0, year(start.date) == 2016) %>%
summarise(total = sum(amount))
View(amount_2016)
gc_high_purp[1,]/amount_2016[1,]
View(gc_high_purp)
print(gc_high_purp[1,])
667160759/1221192668
View(dataset)
###What was the average annual expenditure with a START.DATE date between January 1, 2010 and December 31, 2016 (inclusive)?
###Only consider payments with strictly positive amounts.
dataset %>% filter(between(year(start.date), 2010, 2016), amount > 0) %>%
mutate (start.year = year(start.date)) %>%
group_by(start.year) %>%
summarise(mean(amount))
###What was the average annual expenditure with a START.DATE date between January 1, 2010 and December 31, 2016 (inclusive)?
###Only consider payments with strictly positive amounts.
dataset %>% filter(between(year(start.date), 2010, 2016), amount > 0) %>%
mutate (start.year = year(start.date)) %>%
group_by(start.year) %>%
summarise(mean(amount, na.rm = TRUE))
###What is the total of all the payments in the dataset?
dataset %>% filter(amount > 0) %>%
summarise(total_amount_bill = sum(amount, na.rm = TRUE)/1000000000)
667160759/1221192668
print(hte[1,])
###Find the OFFICE with the highest total expenditures with a START.DATE in 2016. For this office,
###find the PURPOSE that accounts for the highest total expenditures. What fraction of the total expenditures
###(all records, all offices) with a START.DATE in 2016 do these expenditures amount to?
hte = dataset %>% filter(amount > 0, year(start.date) == 2016) %>%
select(office, amount) %>%
group_by(office) %>%
summarise(total_exp = sum(amount, na.rm = TRUE)) %>%
arrange(desc(total_exp))
View(hte)
grep('HON.', hte, value = FALSE)
grep('HON.', hte)
dataset = dataset %>% select(office, payee, start.date, end.date, purpose, amount, quarter)
View(dataset)
###Define the COVERAGE.PERIOD for each payment as the difference (in days) between END.DATE and START.DATE.
###What is the standard deviation in COVERAGE.PERIOD? Only consider payments with strictly positive amounts.
dataset = dataset %>% mutate(coverage.period = end.date - start.date)
dataset$coverage.period = as.character(dataset$coverage.period)
dataset$coverage.period = gsub(' days', '', dataset$coverage.period)
dataset$coverage.period = as.numeric(dataset$coverage.period)
View(hte)
'GOVERNMENT CONTRIBUTIONS' == 'GOVERNMENT CONTRIBUTIONS'
###Find the OFFICE with the highest total expenditures with a START.DATE in 2016. For this office,
###find the PURPOSE that accounts for the highest total expenditures. What fraction of the total expenditures
###(all records, all offices) with a START.DATE in 2016 do these expenditures amount to?
hte = dataset %>% filter(amount > 0, year(start.date) == 2016) %>%
select(office, amount) %>%
group_by(office) %>%
summarise(total_exp = sum(amount, na.rm = TRUE)) %>%
arrange(desc(total_exp))
(desc(total_exp))
###Find the OFFICE with the highest total expenditures with a START.DATE in 2016. For this office,
###find the PURPOSE that accounts for the highest total expenditures. What fraction of the total expenditures
###(all records, all offices) with a START.DATE in 2016 do these expenditures amount to?
high_total_exp = dataset %>% filter(amount > 0, year(start.date) == 2016) %>%
select(office, amount) %>%
group_by(office) %>%
summarise(total_exp = sum(amount, na.rm = TRUE)) %>%
arrange(desc(total_exp))
###Find the OFFICE with the highest total expenditures with a START.DATE in 2016. For this office,
###find the PURPOSE that accounts for the highest total expenditures. What fraction of the total expenditures
###(all records, all offices) with a START.DATE in 2016 do these expenditures amount to?
high_total_exp = dataset %>% filter(amount > 0, year(start.date) == 2016) %>%
select(office, amount) %>%
group_by(office) %>%
summarise(total_exp = sum(amount)) %>%
arrange(desc(total_exp))
View(hte)
View(gc_high_purp)
gc_high_purp = dataset %>% filter(office == 'GOVERNMENT CONTRIBUTIONS', amount > 0) %>%
select(office, purpose, amount) %>%
group_by(purpose) %>%
summarise(purp_total = sum(amount, na.rm = TRUE)) %>%
arrange(desc(purp_total))
high_total_exp[1,]
###What is the total of all the payments in the dataset?
dataset %>%
summarise(total_amount_bill = sum(amount, na.rm = TRUE)/1000000000)
###What is the total of all the payments in the dataset?
dataset %>% filter(amount > 0) %>%
summarise(total_amount_bill = sum(amount, na.rm = TRUE)/1000000000)
View(dataset)
high_total_exp = dataset %>% filter(amount > 0, year(start.date) == 2016) %>%
select(office, amount) %>%
group_by(office) %>%
summarise(total_exp = sum(amount)) %>%
arrange(desc(total_exp))
View(high_total_exp)
###Find the OFFICE with the highest total expenditures with a START.DATE in 2016. For this office,
###find the PURPOSE that accounts for the highest total expenditures. What fraction of the total expenditures
###(all records, all offices) with a START.DATE in 2016 do these expenditures amount to?
high_total_exp = dataset %>% filter(amount > 0, year(start.date) == 2016) %>%
select(office, amount) %>%
group_by(office) %>%
summarise(total_exp = sum(amount)) %>%
arrange(desc(total_exp))
View(gc_high_purp)
class(dataset$amount)
###Find the OFFICE with the highest total expenditures with a START.DATE in 2016. For this office,
###find the PURPOSE that accounts for the highest total expenditures. What fraction of the total expenditures
###(all records, all offices) with a START.DATE in 2016 do these expenditures amount to?
high_total_exp = dataset %>% filter(amount > 0, year(start.date) == 2016) %>%
select(office, amount) %>%
group_by(office) %>%
summarise(total_exp = sum(amount, na.rm = TRUE)) %>%
arrange(desc(total_exp))
View(high_total_exp)
high_total_exp[1,1] == high_total_exp[3,1]
class(dataset)
#1.1
temp = read.table('https://s3.amazonaws.com/graderdata/Temp.txt', header = TRUE)
summary(temp)
str(temp)
head(temp)
#1.4
t.test(Body.Temp ~ Gender, data=temp)
View(temp)
install.packages("googleAuthR")
comments = (0:6)
stories = (40000, 56000, 34000, 56747, 98989, 12324, 23424)
stories = (40000, 56000, 34000, 56747, 98989, 12324, 23424)
stories = ("40000", 56000, 34000, 56747, 98989, 12324, 23424)
stories = c(40000, 56000, 34000, 56747, 98989, 12324, 23424)
as.dataframe(comments, stories)
as.data.frame(comments, stories)
q1 = as.data.frame(comments, stories)
q1['stories'] = stories
q1
plot = q1 %>% ggplot(., aes(x = comments, y = stories)) + geom_bar(stat = 'identity')
library(ggplot2)
library(dplyr)
plot = q1 %>% ggplot(., aes(x = comments, y = stories)) + geom_bar(stat = 'identity')
plot
plot = q1 %>%
ggplot(., aes(x = comments, y = stories)) +
geom_bar(stat = 'identity')
plot
?bootstrap
plot = q1 %>%
ggplot(., aes(x = comments, y = stories)) +
geom_bar(stat = 'identity') +
geom_density()
plot
plot = q1 %>%
ggplot(., aes(x = comments, y = stories)) +
geom_histogram()
plot
plot = q1 %>%
ggplot(., aes(x = comments)) +
geom_histogram()
plot
plot = q1 %>%
ggplot(., aes(x = comments, y = stories)) +
geom_bar(stat = 'identity') +
geom_density()
plot
plot = q1 %>%
ggplot(., aes(x = comments, y = stories)) +
geom_bar(stat = 'identity')
plot
fbid = sample(c(10000:99999), 2000)
fbIid = sample(c(10000:99999), 2000)
act_id
fb_id = sample(c(10000:99999), 2000)
act_id
act_id = sample(c(1001, 981, 734, 985), 2000)
act_id = sample(c(1001, 981, 734, 985), 2000, replace = TRUE)
act_id = sample(c(100:9999), 2000, replace = TRUE)
act_id = sample(c(100:1001), 2000, replace = TRUE)
type = sample(c('Post', 'Comment', 'Photo', 'Share'))
type = sample(c('Post', 'Comment', 'Photo', 'Share'), 2000, replace = TRUE)
ref_id = sample(c(100:1001), 2000)
ref_id = sample(c(100:1001), 2000, replace = TRUE)
fb = as.data.frame(fb_id)
fb['ref_id'] = ref_id
fb['act_id'] = act_id
fb['type'] = type
fb['ref_id'] = ref_id
fb
setwd("~/Professional/Bootcamp/Class/Projects/Selenium - NPR/csv")
sample = read.csv("NPR.sample.csv", stringsAsFactors = FALSE)
View(sample)
###Polarity Boxplots
sample %>%
ggplot(., aes(x = Rating, y = Polarity)) +
geom_boxplot()
library(dplyr)
library(ggplot2)
library(lubridate)
###Polarity Boxplots
sample %>%
ggplot(., aes(x = Rating, y = Polarity)) +
geom_boxplot()
###Polarity Boxplots
sample %>% group_by(Rating) %>%
ggplot(., aes(x = Rating, y = Polarity)) +
geom_boxplot()
?aes()
###Polarity Boxplots
sample %>% group_by(Rating) %>%
ggplot(., aes(group = Rating, y = Polarity)) +
geom_boxplot()
sample$Rating = as.character(sample$Rating)
###Polarity Boxplots
sample %>% group_by(Rating) %>%
ggplot(., aes(x = Rating, y = Polarity)) +
geom_boxplot()
###Polarity Boxplots
sample %>% group_by(Rating) %>%
ggplot(., aes(x = Rating, y = Polarity)) +
geom_boxplot() + ggtitle("Podcast Review Polarity by Rating")
###Polarity Boxplots
sample %>% group_by(Rating) %>%
ggplot(., aes(x = Rating, y = Subjectivity)) +
geom_boxplot() + ggtitle("Podcast Review Subjectivity by Rating")
###What are the ratings by show?
ratings_num = total %>% group_by(Rating) %>%
summarise(review_num = n())
total = read.csv("NPR.Total.csv", stringsAsFactors = FALSE)
###What are the ratings by show?
ratings_num = total %>% group_by(Rating) %>%
summarise(review_num = n())
###What's up with October 12, 2016?
twentysix = total %>%
group_by(Date) %>%
summarise(most = n()) %>%
ggplot(., aes(x=Date, y = most)) +
geom_histogram(stat = "identity", bins = 100)
View(ratings_num)
###Time series of number of reviews
politics %>% group_by(Date) %>%
summarise(total = n()) %>%
ggplot(., aes(x = Date, y = total)) + geom_line()
###Time series of number of reviews
sample %>% group_by(Date) %>%
summarise(total = n()) %>%
ggplot(., aes(x = Date, y = total)) + geom_line()
###Time series of number of reviews
sample %>% mutate(Rev_year = year(Date)) %>%
group_by(Rev_year) %>%
summarise(total = n()) %>%
ggplot(., aes(x = Rev_year, y = total)) + geom_line()
###Time series of number of reviews
sample %>% mutate(Rev_year = year(Date)) %>%
group_by(Rev_year) %>%
summarise(total = n()) %>%
ggplot(., aes(x = Rev_year, y = total)) +
geom_line() +
ggtitle("Total Reviews Left per Year") +
xlab("Year") + ylab("Total Reviews")
###Time series of number of reviews
sample %>% mutate(Rev_year = year(Date)) %>%
group_by(Rev_year) %>%
summarise(total = n()) %>%
ggplot(., aes(x = Rev_year, y = total)) +
geom_line() +
ggtitle("Total Reviews Left per Year") +
xlab("Year") + ylab("Reviews Left")
###Time series of number of reviews
sample %>% mutate(Rev_year = year(Date)) %>%
group_by(Rev_year) %>%
summarise(total = n()) %>%
ggplot(., aes(x = Rev_year, y = total))
###Time series of number of reviews
sample %>% mutate(Rev_year = year(Date)) %>%
group_by(Rev_year) %>%
summarise(total = n())
###What are the ratings by show?
ratings_num = total %>% group_by(Show, Rating) %>%
summarise(review_num = n())
ratings_num
group_by(Show, Rev_year) %>%
summarise(review_num = n()) %>%
ggplot(., aes(x = Rev_year, y = review_num, fill = Show)) +
geom_line(position = "dodge")
group_by(Show, Rev_year) %>%
summarise(review_num = n()) %>%
ggplot(., aes(x = Rev_year, y = review_num, fill = Show)) +
geom_line(position = "dodge")
(position = "dodge")
group_by(Show, Rev_year) %>%
summarise(review_num = n()) %>%
ggplot(., aes(x = Rev_year, y = review_num, fill = Show)) +
geom_line(position = "dodge")
###What are the ratings by show?
sample %>%
mutate(Rev_year = year(Date)) %>%
group_by(Show, Rev_year) %>%
summarise(review_num = n()) %>%
ggplot(., aes(x = Rev_year, y = review_num, fill = Show)) +
geom_line(position = "dodge")
###What are the ratings by show?
sample %>%
mutate(Rev_year = year(Date)) %>%
group_by(Show, Rev_year) %>%
summarise(review_num = n()) %>%
ggplot(., aes(x = Rev_year, y = review_num)) +
geom_line() + facet_wrap(~ Show)
###What are the ratings by show?
sample %>%
mutate(Rev_year = year(Date)) %>%
group_by(Show, Rev_year) %>%
summarise(review_num = n()) %>%
ggplot(., aes(x = Rev_year, y = review_num)) +
geom_line() + facet_wrap(~ Show) +
ggtitle("Reviews Over Time by Show") +
xlab("Year") + ylab("Reviews Left")
###Avg rating per year
total %>% mutate(Rev_Year = year(Date)) %>%
group_by(Rev_Year) %>%
summarise(Avgrating = mean(Rating)) %>%
ggplot(., aes(x = Rev_Year, y = Avgrating)) +
geom_line()
###Avg rating per year
total %>% mutate(Rev_Year = year(Date)) %>%
group_by(Rev_Year) %>%
summarise(Avgrating = mean(Rating)) %>%
ggplot(., aes(x = Rev_Year, y = Avgrating)) +
geom_line() + ggtitle("Average Podcast Review Rating per Year") +
xlab("Year") + ylab("Average Rating")
###Avg rating per year
total %>% mutate(Rev_Year = year(Date)) %>%
group_by(Rev_Year) %>%
summarise(Avgrating = mean(Rating)) %>%
ggplot(., aes(x = Rev_Year, y = Avgrating)) +
geom_line() +
facet_wrap(~ Show) +
ggtitle("Average Podcast Review Rating per Year") +
xlab("Year") + ylab("Average Rating")
###Avg rating per year
total %>% mutate(Rev_Year = year(Date)) %>%
group_by(Rev_Year) %>%
summarise(Avgrating = mean(Rating)) %>%
ggplot(., aes(x = Rev_Year, y = Avgrating)) +
geom_line() +
facet_wrap(~ Show) +
ggtitle("Average Podcast Review Rating per Year") +
xlab("Year") + ylab("Average Rating")
###Avg rating per year
total %>% mutate(Rev_Year = year(Date)) %>%
group_by(Rev_Year) %>%
summarise(Avgrating = mean(Rating)) %>%
ggplot(., aes(x = Rev_Year, y = Avgrating)) +
geom_line() +
facet_wrap(Show) +
ggtitle("Average Podcast Review Rating per Year") +
xlab("Year") + ylab("Average Rating")
###Polarity Boxplots
sample %>% group_by(Rating) %>%
ggplot(., aes(x = Rating, y = Subjectivity)) +
geom_boxplot() +
facet_wrap(~ Show) +
+ ggtitle("Podcast Review Subjectivity by Rating")
###Polarity Boxplots
sample %>% group_by(Rating) %>%
ggplot(., aes(x = Rating, y = Subjectivity)) +
geom_boxplot() +
facet_wrap(~ Show) +
ggtitle("Podcast Review Subjectivity by Rating")
###Polarity Boxplots
sample %>% group_by(Rating) %>%
ggplot(., aes(x = Rating, y = Polarity)) +
geom_boxplot() +
facet_wrap(~ Show) +
ggtitle("Podcast Review Polarity by Rating")
